<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.UsersDao">
	<resultMap id="BaseResultMap" type="com.demo.model.Users">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="username" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="password_salt" property="password_salt" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		 id as id,
		 username as username,
		 password as password,
		 password_salt as password_salt
	</sql>

	<sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and|or">
				<if test="id != null"> and id = #{id}</if>
				<if test="username != null"> and username = #{username}</if>
				<if test="password != null"> and password = #{password}</if>
				<if test="password_salt != null"> and password_salt = #{password_salt}</if>
				<if test="searchWhere != null"> ${searchWhere}</if>
			</trim>
		</where>
		<if test="page != null">
			limit ${page.First}, ${page.Pagesize}
		</if>
	</sql>

	<sql id="Base_Where_Json">
		<where>
			<trim prefixOverrides="and|or">
				<if test="id != null">  and id ${id.dataOp} ${id.likestar}#{id.value}${id.likeend}</if>
				<if test="username != null">  and username ${username.dataOp} ${username.likestar}#{username.value}${username.likeend}</if>
				<if test="password != null">  and password ${password.dataOp} ${password.likestar}#{password.value}${password.likeend}</if>
				<if test="password_salt != null">  and password_salt ${password_salt.dataOp} ${password_salt.likestar}#{password_salt.value}${password_salt.likeend}</if>
				<if test="searchWhere != null"> ${searchWhere}</if>
			</trim>
		</where>
		<if test="page != null">
			limit ${page.First}, ${page.Pagesize}
		</if>
	</sql>

	<select id="selectCountJson" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id) from users
		<include refid="Base_Where_Json" />
	</select>

	<select id="selectListJson" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List"/>
		from users
		<include refid="Base_Where_Json" />
	</select>

	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id) from users
		<include refid="Base_Where_Clause" />
	</select>

	<select id="selectList" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List"/>
		from users
		<include refid="Base_Where_Clause" />
	</select>
<select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from users
		where username = #{username}
	</select>
	
	<select id="findRoles"  resultType="java.lang.String" parameterType="java.lang.String">
	
	select role from sys_users u, sys_roles r,sys_users_roles ur where u.username=#{username} and u.id=ur.user_id and r.id=ur.role_id
	
	</select>
		<select id="findPermissions"  resultType="java.lang.String" parameterType="java.lang.String">
	
	select permission from sys_users u, sys_roles r, sys_permissions p, sys_users_roles ur, sys_roles_permissions rp where u.username=#{username} and u.id=ur.user_id and r.id=ur.role_id and r.id=rp.role_id and p.id=rp.permission_id
	
	</select>
	
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from users
		where id = #{id}
	</select>

	<delete id="deleteById" parameterType="java.lang.String">
		delete from users
		where id = #{id}
	</delete>

	<delete id="delete" parameterType="java.util.Map">
		delete from users
		<include refid="Base_Where_Clause" />
	</delete>

	<insert id="insert" parameterType="com.demo.model.Users">
		insert into users(
			id,
			username,
			password,
			password_salt
		)
		values(
			#{id,jdbcType=VARCHAR},
			#{name,jdbcType=VARCHAR},
			#{password,jdbcType=VARCHAR},
			#{password_salt,jdbcType=VARCHAR}
		)		
	</insert>

	<update id="updateById" parameterType="com.demo.model.Users">
		update users 
		set username=			#{username,jdbcType=VARCHAR},
		password=			#{password,jdbcType=VARCHAR},
		password_salt=			#{password_salt,jdbcType=VARCHAR}
		where id = #{id}
	</update>

	<update id="updateByIdSelective" parameterType="com.demo.model.Users">
		update users 
 		<set>
			<if test="username != null">username = #{username,jdbcType=VARCHAR},</if>
			<if test="password != null">password = #{password,jdbcType=VARCHAR},</if>
			<if test="password_salt != null">password_salt = #{password_salt,jdbcType=VARCHAR},</if>
		</set>
		where id = #{id}
	</update>

</mapper>