<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- <aop:aspectj-autoproxy/> -->
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.demo">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
 
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->
	<!-- 引入配置文件 -->
	<context:property-placeholder
		ignore-resource-not-found="true" location="classpath*:/jdbc.properties" />
	<!-- Tomcat JDBC连接池 -->
	<bean id="commondatesource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
	<!-- 	<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" /> -->

		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
		<property name="minIdle" value="0" />
		<property name="defaultAutoCommit" value="false" />
	</bean> 
    <bean parent="commondatesource" id="testDataSource1"  >
   <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" /> 
    </bean>
    <bean parent="commondatesource" id="testDataSource2"  >
      <property name="url" value="${jdbc1.url}" />
        <property name="username" value="${jdbc1.username}" />
        <property name="password" value="${jdbc1.password}" /> 
    </bean>
<bean class="com.demo.dataSource.DynamicDataSource" id="dataSource">  
 
    <property name="targetDataSources">  
        <map key-type="java.lang.String">  
            <entry value-ref="testDataSource1" key="testDataSource1"></entry>  
            <entry value-ref="testDataSource2" key="testDataSource2"></entry>  
        </map>  
    </property>  
    <property name="defaultTargetDataSource" ref="testDataSource1">  
    </property>  
</bean> 
    <bean id="dynamicDataSourceInterceptor" class="com.demo.dataSource.DynamicDataSourceInterceptor" />
    <aop:config>
        <aop:aspect id="dataSourceAspect" ref="dynamicDataSourceInterceptor">
            <aop:pointcut id="pub" expression="execution(* com.demo.service.*.select*(..))" />
            <aop:pointcut id="pqk" expression="execution(* com.demo.service.*.insert*(..))" />
            <aop:before method="setTestDataSource1" pointcut-ref="pub"/>
            <aop:before method="setTestDataSource2" pointcut-ref="pqk"/>
        </aop:aspect>
    </aop:config> 
</beans>